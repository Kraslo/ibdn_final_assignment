version: '3.8'

services:
  mongo:
    image: mongoibdn
    container_name: mongotainer
    networks:
      - app-tier
    restart: always
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: agile_data_science
    ports:
      - 27017:27017
    volumes:
      - data-volume:/data_ibdn
      #- db-volume:/data/db
  mongo-express:
    image: mongo-express
    restart: "unless-stopped"
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://mongotainer:27017
      ME_CONFIG_BASICAUTH: "false"
    networks:
      - app-tier

  kafka:
    image: kafkaibdn
    container_name: kafkaibdn
    networks:
      - app-tier
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_ADVERTISED_LISTENERS:PLAINTEXT://kafkaibdn:9092

  pyflask:
    image: pyflask
    networks:
      - app-tier
    ports:
      - 5001:5001
    environment:
      - FLASK_ENV=development
      - PROJECT_HOME=/app # check check
      - SPARK_MASTER_URL=spark://spark-master:7077
      - JAVA_HOME=/train_volume/java/openjdk
      - SPARK_HOME=/train_volume/spark
    volumes:
      - train-volume:/train_volume
      - data-volume:/app/data:ro
      - model-volume:/app/models

  sparkscala-master:
    image: sparkscala
    container_name: spark-master
    networks:
      - app-tier
    ports:
      - 40339:40339
      - 7077:7077
      - 8082:8080 # 8080 occupied by kafka (maybe)!!
      # - 8083:8081 # 8081 occupied by mongo-express!!
      - 4040:4040
    environment:
      - WORKER_COUNT=2
      - ROLE=master
    volumes:
      - train-volume:/train_volume
      - data-volume:/app/data
      - model-volume:/app/models

  sparkscala-worker1:
    image: sparkscala
    networks:
      - app-tier
    ports:
      - 8083:8081
    environment:
      - ROLE=worker
      - MASTER_NAME=spark-master
    volumes:
      - data-volume:/app/data:ro
      - model-volume:/app/models

  sparkscala-worker2:
    image: sparkscala
    networks:
      - app-tier
    ports:
      - 8084:8081
    environment:
      - ROLE=worker
      - MASTER_NAME=spark-master
    volumes:
      - data-volume:/app/data:ro
      - model-volume:/app/models

networks:
  app-tier:
    driver: bridge

volumes:
  train-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kraslo/UNI/3ER_ANO/IBDN/PRACTICA_FINAL/train_volume
  data-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kraslo/UNI/3ER_ANO/IBDN/PRACTICA_FINAL/data_volume
  model-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kraslo/UNI/3ER_ANO/IBDN/PRACTICA_FINAL/model_volume
